<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9EcpDciAWygf/9k=
</value>
  </data>
</root>